// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contact.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Contact struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Age                  string   `protobuf:"bytes,3,opt,name=Age,proto3" json:"Age,omitempty"`
	Gender               string   `protobuf:"bytes,4,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Phone                string   `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5036fff2565fb15, []int{0}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *Contact) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ContactId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactId) Reset()         { *m = ContactId{} }
func (m *ContactId) String() string { return proto.CompactTextString(m) }
func (*ContactId) ProtoMessage()    {}
func (*ContactId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5036fff2565fb15, []int{1}
}

func (m *ContactId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactId.Unmarshal(m, b)
}
func (m *ContactId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactId.Marshal(b, m, deterministic)
}
func (m *ContactId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactId.Merge(m, src)
}
func (m *ContactId) XXX_Size() int {
	return xxx_messageInfo_ContactId.Size(m)
}
func (m *ContactId) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactId.DiscardUnknown(m)
}

var xxx_messageInfo_ContactId proto.InternalMessageInfo

func (m *ContactId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetContacts struct {
	Contacts             []*Contact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetContacts) Reset()         { *m = GetContacts{} }
func (m *GetContacts) String() string { return proto.CompactTextString(m) }
func (*GetContacts) ProtoMessage()    {}
func (*GetContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5036fff2565fb15, []int{2}
}

func (m *GetContacts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContacts.Unmarshal(m, b)
}
func (m *GetContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContacts.Marshal(b, m, deterministic)
}
func (m *GetContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContacts.Merge(m, src)
}
func (m *GetContacts) XXX_Size() int {
	return xxx_messageInfo_GetContacts.Size(m)
}
func (m *GetContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContacts.DiscardUnknown(m)
}

var xxx_messageInfo_GetContacts proto.InternalMessageInfo

func (m *GetContacts) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type Status struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5036fff2565fb15, []int{3}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Contact)(nil), "proto.Contact")
	proto.RegisterType((*ContactId)(nil), "proto.ContactId")
	proto.RegisterType((*GetContacts)(nil), "proto.GetContacts")
	proto.RegisterType((*Status)(nil), "proto.Status")
}

func init() { proto.RegisterFile("contact.proto", fileDescriptor_a5036fff2565fb15) }

var fileDescriptor_a5036fff2565fb15 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0x0d, 0x50, 0x50, 0xa6, 0x29, 0x69, 0x26, 0xa6, 0xd9, 0xd0, 0x0b, 0x21, 0x31, 0x41, 0x0f,
	0x34, 0xa9, 0x5e, 0x3c, 0x12, 0x35, 0x0d, 0x07, 0x8d, 0xc1, 0xf8, 0x03, 0xb6, 0xdd, 0x11, 0x0f,
	0xc0, 0x12, 0xd8, 0x1e, 0xfc, 0x7b, 0xfe, 0x32, 0xc3, 0xb2, 0x1a, 0xe5, 0xd2, 0xd3, 0xce, 0x7b,
	0xf3, 0xf5, 0x76, 0x1e, 0x2c, 0x0e, 0xb2, 0x51, 0xfc, 0xa0, 0xd2, 0xb6, 0x93, 0x4a, 0xa2, 0xab,
	0x9f, 0x70, 0x5d, 0x4a, 0x59, 0x56, 0xb4, 0xd1, 0x68, 0x7f, 0x7c, 0xdf, 0x50, 0xdd, 0xaa, 0xcf,
	0xb1, 0x26, 0xae, 0xe1, 0xec, 0x7e, 0x6c, 0xc2, 0x00, 0xec, 0x5c, 0x30, 0x2b, 0xb2, 0x12, 0xa7,
	0xb0, 0x73, 0x81, 0x08, 0xb3, 0x67, 0x5e, 0x13, 0xb3, 0x23, 0x2b, 0xf1, 0x0b, 0x1d, 0xe3, 0x12,
	0x9c, 0xac, 0x24, 0xe6, 0x68, 0x6a, 0x08, 0x71, 0x05, 0xde, 0x8e, 0x1a, 0x41, 0x1d, 0x9b, 0x69,
	0xd2, 0x20, 0xbc, 0x00, 0xf7, 0xe5, 0x43, 0x36, 0xc4, 0x5c, 0x4d, 0x8f, 0x20, 0x5e, 0x83, 0x6f,
	0xd6, 0xe5, 0x62, 0xba, 0x30, 0xbe, 0x83, 0xf9, 0x8e, 0x94, 0xc9, 0xf7, 0x78, 0x0d, 0xe7, 0xe6,
	0x3f, 0x3d, 0xb3, 0x22, 0x27, 0x99, 0x6f, 0x83, 0x51, 0x74, 0x6a, 0x4a, 0x8a, 0xdf, 0x7c, 0x1c,
	0x81, 0xf7, 0xaa, 0xb8, 0x3a, 0xf6, 0x83, 0x9e, 0x5e, 0x47, 0x7a, 0xb0, 0x5f, 0x18, 0xb4, 0xfd,
	0xb2, 0x20, 0x30, 0x7d, 0x4f, 0xbc, 0xe1, 0x25, 0x75, 0x78, 0x09, 0x4e, 0x26, 0x04, 0x4e, 0xa6,
	0x86, 0x13, 0x8c, 0x09, 0x78, 0x6f, 0xad, 0xe0, 0x8a, 0x4e, 0x56, 0x5e, 0x81, 0xf7, 0x40, 0x15,
	0x29, 0xc2, 0xe5, 0xff, 0x4c, 0x2e, 0xc2, 0x85, 0x61, 0x8c, 0xcc, 0xdb, 0xe1, 0x6c, 0x2a, 0xab,
	0x2a, 0x5c, 0xa5, 0xa3, 0x3f, 0xe9, 0x8f, 0x3f, 0xe9, 0xe3, 0xe0, 0x4f, 0x88, 0xa6, 0xe1, 0xcf,
	0x49, 0xf6, 0x9e, 0xa6, 0x6e, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x91, 0xf1, 0x35, 0xfb, 0xe9,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContactManagerClient is the client API for ContactManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactManagerClient interface {
	Add(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error)
	Update(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error)
	Delete(ctx context.Context, in *ContactId, opts ...grpc.CallOption) (*Status, error)
	GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetContacts, error)
}

type contactManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewContactManagerClient(cc grpc.ClientConnInterface) ContactManagerClient {
	return &contactManagerClient{cc}
}

func (c *contactManagerClient) Add(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error) {
	out := new(Contact)
	err := c.cc.Invoke(ctx, "/proto.ContactManager/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactManagerClient) Update(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error) {
	out := new(Contact)
	err := c.cc.Invoke(ctx, "/proto.ContactManager/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactManagerClient) Delete(ctx context.Context, in *ContactId, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/proto.ContactManager/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactManagerClient) GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetContacts, error) {
	out := new(GetContacts)
	err := c.cc.Invoke(ctx, "/proto.ContactManager/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactManagerServer is the server API for ContactManager service.
type ContactManagerServer interface {
	Add(context.Context, *Contact) (*Contact, error)
	Update(context.Context, *Contact) (*Contact, error)
	Delete(context.Context, *ContactId) (*Status, error)
	GetAll(context.Context, *empty.Empty) (*GetContacts, error)
}

// UnimplementedContactManagerServer can be embedded to have forward compatible implementations.
type UnimplementedContactManagerServer struct {
}

func (*UnimplementedContactManagerServer) Add(ctx context.Context, req *Contact) (*Contact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedContactManagerServer) Update(ctx context.Context, req *Contact) (*Contact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedContactManagerServer) Delete(ctx context.Context, req *ContactId) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedContactManagerServer) GetAll(ctx context.Context, req *empty.Empty) (*GetContacts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterContactManagerServer(s *grpc.Server, srv ContactManagerServer) {
	s.RegisterService(&_ContactManager_serviceDesc, srv)
}

func _ContactManager_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ContactManager/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).Add(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactManager_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ContactManager/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).Update(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactManager_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ContactManager/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).Delete(ctx, req.(*ContactId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactManager_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactManagerServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ContactManager/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactManagerServer).GetAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ContactManager",
	HandlerType: (*ContactManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ContactManager_Add_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ContactManager_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ContactManager_Delete_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ContactManager_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contact.proto",
}
